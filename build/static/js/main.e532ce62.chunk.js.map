{"version":3,"sources":["components/Calculator/index.js","App.js","reportWebVitals.js","index.js"],"names":["require","evaluate","default","Calculator","useState","currentValue","setCurrentValue","lastValue","setLastValue","className","map","button","onClick","buttonPressed","substring","console","log","length","e","handleTouche","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGA,EAAoCA,EAAQ,IAApCC,EAAR,EAAQA,SAAR,EAAkBC,QAEH,SAASC,IACpB,MAAwCC,mBAAS,KAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,KAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA4EA,OACI,mCACI,uBAAMC,UAAU,aAAhB,UACI,sBAAKA,UAAU,UAAf,UACI,6BAAKF,IACL,6BAAKF,OAET,qBAAKI,UAAU,WAAf,SAhFI,CAAC,KAAM,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAkFlFC,KAAI,SAACC,GACT,OAAQ,qBAAkBF,UAAU,SAASG,QAAS,kBAjF9E,SAAsBC,GAKlB,GAJqB,UAAjBR,GAA6C,cAAjBA,GAC5BC,EAAgB,IAGE,MAAlBO,GAA2C,MAAlBA,GAA2C,MAAlBA,GAA2C,MAAlBA,GAA2C,MAAlBA,EAAxG,CAKA,GAAsB,OAAlBA,EAGA,OAFAP,EAAgB,UAChBE,EAAa,KAIjB,GAAsB,QAAlBK,EAAyB,CACzBL,EAAa,KAEb,IACI,MAAmC,MAA/BH,EAAaS,WAAW,IACxBC,QAAQC,IAAIX,QACZC,EAAgBD,EAAaS,UAAU,EAAIT,EAAaY,OAAS,UAGjEX,EAAgBD,EAAaS,UAAU,EAAIT,EAAaY,OAAS,IAGvE,SAEE,YADAX,EAAgB,MASxB,GAAsB,QAAlBO,GAKkB,MAAlBA,EAOJ,GAAsB,MAAlBA,EAAJ,CACIL,EAAaH,EAAe,OAC5B,IAEI,YADAC,EAAgBL,EAASI,IAE3B,MAAMa,GAEJ,YADAZ,EAAgB,eAKpBA,EAAgBD,EAAeQ,QAvD/BP,EAAgBD,EAAe,IAAMQ,EAAgB,KA2EuBM,CAAaR,IAAjE,SACJ,kCAAKA,EAAL,QADcA,aC5E/BS,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCASY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.e532ce62.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\n\r\nconst { evaluate, default: math } = require('mathjs');\r\n\r\nexport default function Calculator() {\r\n    const [currentValue, setCurrentValue] = useState(' ');\r\n    const [lastValue, setLastValue] = useState(' ');\r\n\r\n\r\n    const buttons = ['AC', 'Del', '%', '/', '7', '8', '9', '*', '4', '5', '6', '-', '1', '2', '3', '+', '0', '.', '=']\r\n\r\n    function handleTouche(buttonPressed) {\r\n        if (currentValue === 'error' || currentValue === 'undefined') {\r\n            setCurrentValue('')\r\n        }\r\n\r\n        if (buttonPressed === '-' || buttonPressed === '+' || buttonPressed === '/' || buttonPressed === '*' || buttonPressed === '%') {\r\n            setCurrentValue(currentValue + \" \" + buttonPressed + \" \")\r\n            return\r\n        }\r\n\r\n        if (buttonPressed === 'AC') {\r\n            setCurrentValue(' ')\r\n            setLastValue(' ')\r\n            return\r\n        }\r\n\r\n        if (buttonPressed === 'Del') {\r\n            setLastValue(' ')\r\n\r\n            try {\r\n                if (currentValue.substring(-1) === ' ') {\r\n                    console.log(currentValue)\r\n                    setCurrentValue(currentValue.substring(0, (currentValue.length - 2)))\r\n                    return\r\n                } else {\r\n                    setCurrentValue(currentValue.substring(0, (currentValue.length - 1)))\r\n                    return\r\n                }\r\n            } catch {\r\n                setCurrentValue(' ')\r\n                return\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        // Implementar\r\n        if (buttonPressed === '+/-') {\r\n\r\n            return\r\n        }\r\n        \r\n        if (buttonPressed === '%') {\r\n\r\n            return\r\n        }\r\n\r\n        //\r\n\r\n        if (buttonPressed === '=') {\r\n            setLastValue(currentValue + ' = ')\r\n            try {\r\n                setCurrentValue(evaluate(currentValue));\r\n                return\r\n            } catch(e) {\r\n                setCurrentValue('error');\r\n                return\r\n            }\r\n\r\n        } else {\r\n            setCurrentValue(currentValue + buttonPressed)\r\n            return\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <main className=\"calculator\">\r\n                <div className=\"display\">\r\n                    <h2>{lastValue}</h2>\r\n                    <h1>{currentValue}</h1>\r\n                </div>\r\n                <div className=\"keyboard\">\r\n                    {\r\n                        buttons.map((button) => {\r\n                            return (<div key={button} className='button' onClick={() => handleTouche(button)}>\r\n                                <p> {button} </p>\r\n                            </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n            </main>\r\n\r\n\r\n        </>\r\n    )\r\n}","\nimport './App.css';\nimport Calculator from './components/Calculator';\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}